class Solution {
public:
    void nextPermutation(vector<int>& nums) {
         int n = nums.size();
if(n>2){   
        bool des = false;
        vector<int> v = nums;
        sort(v.begin(), v.end(), greater <>());
        des = (v==nums);
         if(!des){
         int i = n-2;
           while(nums[i]>=nums[i+1] && i>0){
             i--;
         }
         int j = i;
         while(nums[j+1]>nums[i] && j<n){
             j++;
         }
         swap(nums[i],nums[j]);
        reverse(nums.begin()+i+1,nums.end());
         }
         else {
            reverse(nums.begin(), nums.end()); 
         }
         }
         else if(n==2){
             reverse(nums.begin(),nums.end());
         }
         
         


         for(auto it: nums){
             cout<<it<< " ";
         }
         
    }
};