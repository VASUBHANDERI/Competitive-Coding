import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.lang.Math;
import java.util.Scanner;
import java.io.*;
import java.util.StringTokenizer;

public class Sollution1 {
	static class FastReader {
		BufferedReader br;
		StringTokenizer st;

		public FastReader() {
			br = new BufferedReader(new InputStreamReader(System.in));
		}

		String next() {
			while (st == null || !st.hasMoreElements()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}

		int nextInt() {
			return Integer.parseInt(next());
		}

		long nextLong() {
			return Long.parseLong(next());
		}

		double nextDouble() {
			return Double.parseDouble(next());
		}

		String nextLine() {
			String str = "";
			try {
				str = br.readLine();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return str;
		}
	}

	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub
		FastReader sc = new FastReader();
		BufferedWriter ou = new BufferedWriter(new OutputStreamWriter(System.out));
		String s = sc.nextLine();
		int[] index = new int[s.length()];
		for (int i = 0; i < s.length(); i++) {
			index[i] = s.charAt(i) - 'a';
		}
		int[] d = new int[s.length() - 1];
		for (int i = 0; i < s.length() - 1; i++) {
			d[i] = Math.abs(index[i] - index[i + 1]);
		}
		int rot = 0;
		if (s.charAt(0) - 'a' > 13) {
			rot = rot + 26 - Math.abs(s.charAt(0) - 'a');
		} else {
			rot = rot + Math.abs(s.charAt(0) - 'a');
		}
		for (int i = 0; i < s.length() - 1; i++) {
			if (d[i] <= 13) {
				rot = rot + d[i];
			} else {
				rot = rot + 26 - d[i];
			}
		}
		ou.write(rot + "\n");
		ou.flush();
	}
}